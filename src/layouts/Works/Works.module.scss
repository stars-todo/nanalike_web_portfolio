@use 'sass:math';
@use '/src/styles/helpers' as *;

.works {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: auto;
  max-width: var(--d-max-width); //TODO: 공통화?
  min-height: rem(1080); //TODO: 공통화?
  margin: 0 auto;
  padding: calc(vh(30) + vw(65) + rem(180)) $padding_global;

  @include mq_t {
    padding-top: $padding_tablet;
    padding-bottom: $padding_tablet;
  }
}

.work_list {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  max-width: rem(1200);

  @include mq_l {
    min-width: rem(840);
    max-width: var(--l-max-width);
    width: 90%;
  }

  @include mq_t {
    min-width: 0;
    max-width: 100%;
    width: 100%;
    gap: calc(13rem - 7vw);
  }

  @include mq_m {
    gap: calc(10rem - 3vw);
  }

  .work_item {
    position: relative;
    float: left;

    $left: -214, 370, -378, 288;
    @each $value in $left {
      $i: index($left, $value);
      &:nth-of-type(4n + #{$i}) {
        left: rem($value);

        @include mq_l {
          left: 0;
        }
      }
    }

    $top: 0, -80, -40, -110;
    @each $value in $top {
      $i: index($top, $value);
      &:nth-of-type(4n + #{$i}) {
        margin-top: #{rem($value)};

        @include mq_l {
          margin-top: 0;
        }
      }
    }
  }

  @include mq_l {
    .work_item {
      float: none;

      &:nth-of-type(odd) {
        align-self: flex-start;
      }

      &:nth-of-type(even) {
        align-self: flex-end;
      }
    }
  }

  @include mq_t {
    .work_item {
      &:nth-of-type(odd) {
        margin-left: math.div((math.div(100vw - 600, 900 - 600)) * (100 - 0) + 0, -25);

        @include mq_m {
          margin-left: 0;
        }
      }

      &:nth-of-type(even) {
        margin-right: math.div((math.div(100vw - 600, 900 - 600)) * (100 - 0) + 0, -25);

        @include mq_m {
          margin-right: 0;
        }
      }
    }
  }

  @include mq_m {
    .work_item {
      width: 100%;
    }
  }
}

.background {
  visibility: hidden;
  z-index: -10;
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100vh;
  text-align: center;

  &.isShow {
    visibility: visible;
  }
}

.title {
  color: #dfdfdf;
  position: relative;
  text-align: center;
  pointer-events: none;

  @include mq_m {
    display: none;
  }

  &.mq_m {
    display: none;
    color: var(--color-gray-light);

    @include mq_m {
      display: block;
    }
  }
}

.text_big {
  width: 100%;
  // transform-origin: 35.5% 100%;
  transform-origin: 50% 50%;

  @include mq_m {
    transform: rotate(90deg);
    // margin-top: -20%;
    margin-top: -10vh;
  }

  .text_big_svg {
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-self: center;
    width: 90%;
    max-width: rem(1600);
    height: rem(220);
    margin: rem(34) auto 0;

    @include mq_t {
      margin-top: 0;
      height: rem(170);
    }

    @include mq_m {
      width: 130%;
      height: rem(200);
    }

    svg {
      height: 100%;
    }

    path {
      stroke-width: 2;

      @include mq_l {
        stroke-width: calc(6px - 0.3vw);
      }
      @include mq_m {
        stroke-width: calc(5px - 0.3vw);
      }
    }
  }
}

// //TODO: 알파벳
// .alphabet.i {
//   position: fixed;
//   height: 100vh;
//   display: none; //TODO:
// }
