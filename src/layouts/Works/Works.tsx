import React, { useRef, useState } from 'react';
import {
  MotionValue,
  Variants,
  motion,
  useScroll,
  useTransform,
  useMotionValueEvent
} from 'framer-motion';
import classNames from 'classnames/bind';
import * as styles from './Works.module.scss';
import Alphabet from '@components/Alphabet/Alphabet';
import ArticleTitle from '@components/ArticleTitle/ArticleTitle';
import WorkItem, { worksList } from '@components/Works/WorkItem/WorkItem';
import useViewport from '@hooks/useViewport';

const c = classNames.bind(styles);

const myWorks = [
  {
    href: 'workboard',
    title: '카카오워크 워크보드',
    year: '23-22',
    skills: ['React', 'TypeScript'],
    place: '카카오엔터프라이즈'
  },
  {
    href: 'email',
    title: '이메일 템플릿',
    year: '23-22',
    skills: ['Email', 'Gatsby'],
    place: '카카오엔터프라이즈'
  },
  {
    href: 'interpark',
    title: '인터파크 개편 & 유지보수',
    year: '21-20',
    skills: ['Cross-browsing', 'jQuery']
  },
  {
    href: 'dooin',
    title: '두인경매 지도 검색',
    year: '21',
    skills: ['Markup', 'jQuery']
  },
  {
    href: 'cosmos',
    title: '코스모스랩 기업 홈페이지',
    year: '21',
    skills: ['Scroll Interaction'],
    place: '블록오디세이'
  },
  {
    href: 'stars',
    title: '별별할일',
    year: '23',
    skills: ['Next.js', 'UX Design'],
    isOngoing: true
  }
];

const TextBig = ({ children }: { children: string }) => {
  const { isDesktop } = useViewport();
  const textReveal: Variants = {
    hidden: {
      opacity: 0
    },
    visible: (i: number = 1) => ({
      opacity: 1,
      transition: { staggerChildren: 0.025, delayChildren: i * 0 }
    })
  };
  const svg = {
    hidden: {
      y: 220,
      skewY: 10,
      transition: {
        type: 'spring',
        damping: 10,
        stiffness: 100
      }
    },
    visible: {
      y: 0,
      skewY: 0,
      transition: {
        type: 'spring',
        damping: 10,
        stiffness: 100
      }
    }
  };
  return (
    <motion.strong
      className={c('text_big')}
      // initial="hidden"
      // whileInView="visible"
      variants={textReveal}
      // viewport={{ once: true }}
    >
      <span className="screenOut">{children}</span>
      <div className={c('text_big_svg')}>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 1287 157">
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="m43.166 146.557.711-.853-.867-.694-3.45-2.76-.85-.68-.68.85c-2.563 3.204-5.657 5.129-9.307 5.827L44.32 62.795l.292-1.6-1.591.34-3.198.686c-5.272.9-13.544 1.36-24.864 1.36H4.096l-.108.969-.46 4.14-.134 1.209h9.568L5.61 109.783l-.001.009-.002.009c-1.227 7.363-2.148 13.14-2.763 17.328-.609 4.146-.932 6.826-.932 7.921 0 5.947 2.023 10.849 6.102 14.601l.008.007.008.007c4.239 3.75 9.966 5.564 17.051 5.564 7.238 0 13.29-2.916 18.086-8.672ZM16.171 28.79c0 4.885 1.723 9.073 5.15 12.5 3.426 3.426 7.613 5.149 12.499 5.149 4.881 0 9.066-1.72 12.49-5.14 3.58-3.42 5.389-7.611 5.389-12.509 0-4.894-1.806-9.081-5.379-12.5-3.419-3.573-7.606-5.379-12.5-5.379-4.898 0-9.088 1.809-12.509 5.388-3.42 3.425-5.14 7.61-5.14 12.491Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="M130.703 148.342c4.978-26.921 9.955-55.99 14.932-87.21 2.607-15.946 4.582-28.41 5.924-37.386 1.146-7.659 1.84-12.832 2.065-15.458 2.77.329 5.191 2.042 7.259 5.403l.008.012.008.013c2.473 3.783 3.732 8.321 3.732 13.664 0 8.826-3.151 20.777-9.573 35.914-6.45 15.051-9.747 26.798-9.747 35.156v1.089h6.318V98.45c0-6.97 3.138-18.215 9.576-33.852 6.603-15.663 9.974-27.867 9.974-36.528 0-8.56-1.863-15.154-5.788-19.575-3.736-4.38-8.561-6.584-14.391-6.584-8.319 0-15.077 3.384-20.186 10.09l-.005.006-.005.007c-4.907 6.647-8.698 17.662-11.465 32.881v.002l-14.95 82.8-.007.036-.004.037c-.307 2.763-.467 4.808-.467 6.1 0 6.667 1.993 11.971 6.102 15.751 4.047 3.724 8.992 5.578 14.767 5.578 5.647 0 10.314-1.096 13.916-3.385 3.609-2.198 6.477-4.657 8.569-7.393 2.054-2.685 4.008-6.054 5.87-10.087 1.997-4.148 3.271-7.387 3.76-9.666l.185-.864-.808-.359-4.14-1.84-1.063-.473-.401 1.093-2.53 6.9-.004.01-.003.01c-1.483 4.299-4.015 8.633-7.63 13.001-3.142 3.796-6.407 5.789-9.798 6.196Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="m212.166 146.557.711-.853-.867-.694-3.45-2.76-.85-.68-.68.85c-2.563 3.204-5.657 5.129-9.307 5.827l15.598-85.452.292-1.6-1.591.34-3.198.686c-5.272.9-13.544 1.36-24.864 1.36h-10.864l-.108.969-.46 4.14-.134 1.209h9.568l-7.353 39.884-.001.009-.002.009c-1.227 7.363-2.148 13.14-2.763 17.328-.609 4.146-.932 6.826-.932 7.921 0 5.947 2.023 10.849 6.102 14.601l.008.007.008.007c4.238 3.75 9.966 5.564 17.051 5.564 7.238 0 13.289-2.916 18.086-8.672ZM185.171 28.79c0 4.885 1.723 9.073 5.149 12.5 3.427 3.426 7.615 5.149 12.5 5.149 4.881 0 9.066-1.72 12.491-5.14 3.579-3.42 5.388-7.611 5.388-12.509 0-4.894-1.806-9.081-5.379-12.5-3.419-3.573-7.606-5.379-12.5-5.379-4.898 0-9.088 1.809-12.509 5.388-3.42 3.425-5.14 7.61-5.14 12.491Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="M257.65 107.65L249.37 152.04H222L247.99 7.6C243.39 8.06 239.557 10.2067 236.49 14.04L233.04 11.28C237.64 5.76 243.39 3 250.29 3C257.343 3 262.787 4.76333 266.62 8.29C270.453 11.8167 272.37 16.8 272.37 23.24C272.37 24.4667 272.217 26.46 271.91 29.22C268.383 48.6933 264.55 69.7 260.41 92.24C264.243 82.8867 269.763 75.6033 276.97 70.39C284.177 65.1767 291.843 62.57 299.97 62.57C308.097 62.57 313.77 64.18 316.99 67.4C320.363 70.62 322.05 74.6833 322.05 79.59C322.05 84.3433 320.593 88.2533 317.68 91.32C314.767 94.3867 310.933 95.92 306.18 95.92C301.58 95.92 297.977 94.6167 295.37 92.01C292.917 89.25 291.69 85.2633 291.69 80.05C291.69 74.6833 293.53 70.62 297.21 67.86C282.49 69.5467 270.76 80.4333 262.02 100.52C264.167 100.213 266.007 100.06 267.54 100.06C275.667 100.06 282.03 101.67 286.63 104.89C291.383 108.11 294.45 112.097 295.83 116.85C297.21 121.45 298.207 126.127 298.82 130.88C299.433 135.48 300.43 139.39 301.81 142.61C303.19 145.83 305.643 147.44 309.17 147.44C312.697 147.44 315.457 145.983 317.45 143.07L320.9 145.83C319.827 147.977 317.45 149.893 313.77 151.58C310.09 153.267 305.337 154.11 299.51 154.11C293.837 154.11 288.777 152.653 284.33 149.74C280.037 146.827 277.047 143.223 275.36 138.93C273.673 134.483 272.293 130.113 271.22 125.82C268.307 114.78 263.783 108.723 257.65 107.65Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="m398.839 108.267.006-.003c4.729-2.601 8.331-5.824 10.748-9.692 2.42-3.872 3.616-8.332 3.616-13.342 0-7.986-2.523-14.147-7.714-18.275-5.143-4.09-12.733-6.044-22.585-6.044-15.459 0-27.884 5.324-37.16 16.012-9.271 10.53-13.839 25.077-13.839 43.497 0 10.512 3.226 18.946 9.769 25.169l.009.009.011.009c6.711 6.073 16.445 9.022 29.02 9.022 6.713 0 12.832-1.093 18.344-3.298l.013-.005.012-.005c5.428-2.327 9.619-4.841 12.509-7.569 2.851-2.693 5.443-6.078 7.785-10.138l.004-.008.005-.007c2.315-4.168 3.765-7.589 4.258-10.218l.159-.846-.787-.35-4.14-1.84-1.531-.68v1.675c0 .172-.053.501-.231 1.036-.173.518-.441 1.164-.813 1.946-.744 1.562-1.872 3.596-3.397 6.112-1.648 2.697-3.599 5.325-5.855 7.883-2.179 2.32-5.191 4.389-9.081 6.184l-.008.004-.007.003c-3.67 1.762-7.799 2.653-12.409 2.653-4.47 0-8.169-1.499-11.172-4.492-2.799-3.093-4.299-7.909-4.299-14.659 0-2.992.133-7.001.403-12.034 16.452-.245 29.272-2.781 38.357-7.709Zm2.107-34.745.017.02.019.019c2.847 2.99 4.299 6.847 4.299 11.669 0 3.844-.917 7.163-2.719 9.996-1.805 2.837-4.537 5.249-8.257 7.211-7.268 3.833-18.199 5.893-32.914 6.073 1.878-13.077 5.456-22.874 10.642-29.503 5.58-6.936 11.05-10.168 16.397-10.168 5.778 0 9.874 1.623 12.516 4.683Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="M603.41 96.439c4.574 0 8.47-1.544 11.636-4.598.105.986.155 1.77.155 2.359 0 13.725-3.991 26.073-11.981 37.078-7.995 10.86-16.903 16.113-26.72 16.113-3.865 0-6.752-1.271-8.812-3.734-1.945-2.509-2.979-5.998-2.979-10.587 0-4.752 1.497-12.986 4.565-24.796l.001-.004c3.069-11.97 4.634-20.9 4.634-26.72 0-5.915-1.847-10.87-5.585-14.775-3.607-3.93-8.436-5.864-14.364-5.864-5.807 0-10.755 1.099-14.792 3.36l-.008.004-.009.005c-1.858 1.084-3.388 2.063-4.58 2.937-1.176.862-2.084 1.666-2.642 2.41-.942 1.256-1.673 2.387-2.173 3.386l-.393.787.687.55 3.45 2.76.906.725.666-.95 1.61-2.3c.968-1.383 2.536-2.828 4.772-4.32l.02-.013.02-.014c1.757-1.289 3.528-2.078 5.32-2.402-.443 6.113-2.008 14.65-4.721 25.643l-.002.01c-2.763 11.666-4.17 20.433-4.17 26.241 0 5.544.791 10.485 2.397 14.803-6.074 8.671-13.253 12.858-21.548 12.858-3.865 0-6.752-1.271-8.812-3.734-1.945-2.509-2.979-5.998-2.979-10.587 0-4.752 1.497-12.986 4.565-24.796l.001-.004c3.069-11.97 4.634-20.9 4.634-26.72 0-5.915-1.847-10.87-5.585-14.775-3.607-3.93-8.436-5.864-14.364-5.864-5.807 0-10.755 1.099-14.792 3.36l-.008.004-.009.005c-1.858 1.084-3.388 2.063-4.58 2.937-1.176.862-2.084 1.666-2.642 2.41-.942 1.256-1.673 2.387-2.173 3.386l-.393.787.687.55 3.45 2.76.906.725.666-.95 1.61-2.3c.968-1.383 2.536-2.828 4.772-4.32l.02-.013.02-.014c1.757-1.289 3.528-2.078 5.32-2.402-.443 6.113-2.008 14.65-4.721 25.643l-.002.01c-2.771 11.699-4.17 21.602-4.17 29.691 0 8.289 3.201 15.612 9.519 21.93l.01.009c6.514 6.356 14.849 9.51 24.91 9.51 12.499 0 22.555-4.21 30.056-12.669 6.355 8.467 15.635 12.669 27.674 12.669 7.349 0 14.027-1.408 20.016-4.245l.011-.005c6.093-2.969 10.981-6.662 14.624-11.098l.006-.007.006-.007c3.587-4.523 6.624-9.586 9.112-15.185 2.481-5.582 4.197-10.876 5.135-15.881.936-4.993 1.399-10.967 1.399-17.911 0-7.002-.894-12.627-2.76-16.796a1.667 1.667 0 0 0-.372-1.024c-1.312-3.34-3.492-6.055-6.515-8.13-2.98-2.307-6.669-3.429-10.992-3.429-4.331 0-8.203 1.845-11.589 5.388-3.42 3.425-5.14 7.61-5.14 12.491 0 4.885 1.723 9.073 5.149 12.5 3.441 3.44 7.789 5.149 12.96 5.149Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="M643.88 14.72c2.566-3.207 5.662-5.132 9.316-5.829L627.928 151.85l-.226 1.279H657.514l.158-.901 7.583-43.2c3.047-12.02 6.912-21.458 11.563-28.363 4.835-6.947 9.609-10.106 14.282-10.106 2.962 0 4.987.774 6.285 2.135 1.307 1.37 2.056 3.525 2.056 6.666 0 4.165-1.354 13.101-4.119 26.926-2.758 13.793-4.161 23.475-4.161 28.964 0 6.485 1.805 11.541 5.593 14.954 3.766 3.394 9.308 4.995 16.426 4.995 4.588 0 8.808-.871 12.644-2.629 3.764-1.726 6.412-3.777 7.65-6.253l.393-.787-.687-.55-3.45-2.76-.79-.632-.688.741c-3.441 3.706-6.622 5.616-9.547 6.013.428-6.636 2.001-16.279 4.739-28.962l.001-.003c2.909-13.629 4.394-22.94 4.394-27.827 0-9.252-2.593-16.61-7.904-21.924-5.312-5.47-12.674-8.145-21.935-8.145-6.799 0-12.759 1.823-17.831 5.497-3.471 2.515-6.496 5.874-9.086 10.052l8.439-47.62.006-.035.004-.035c.307-2.763.467-4.808.467-6.1 0-6.667-1.993-11.971-6.102-15.751-4.096-3.769-9.839-5.578-17.067-5.578-7.238 0-13.289 2.916-18.086 8.672l-.711.853.867.694 3.45 2.76.85.68.68-.85Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="M777.58 154.629c9.989 0 18.287-5.347 24.914-15.678.984 4.674 3.089 8.375 6.375 11.011 3.941 3.161 9.431 4.667 16.321 4.667 7.238 0 13.289-2.916 18.086-8.672l.711-.853-.867-.694-3.45-2.76-.85-.68-.68.85c-2.563 3.204-5.657 5.129-9.307 5.827l15.598-85.451.297-1.63-1.613.373-2.957.683c-5.428.9-13.776 1.36-25.088 1.36h-.893l-.175.874a442.587 442.587 0 0 0-1.898 10.106c-1.817-3.747-4.234-6.721-7.27-8.882-3.941-2.803-8.833-4.169-14.604-4.169-13.95 0-25.373 5.112-34.175 15.328-8.806 10.222-13.144 24.227-13.144 41.881 0 11.389 3.047 20.428 9.27 26.97l.01.01.009.01c6.375 6.375 14.875 9.519 25.38 9.519Zm13.709-13.117-.004.003c-3.73 3.88-7.222 5.646-10.485 5.646-3.374 0-5.767-1.168-7.37-3.419-1.505-2.489-2.351-7.04-2.351-13.892 0-14.45 2.281-28.283 6.84-41.505l.001-.004c2.277-6.678 4.882-11.584 7.773-14.804 2.868-3.195 5.983-4.698 9.367-4.698 3.68 0 6.821 1.875 9.434 5.94 2.627 4.087 4.186 8.92 4.649 14.534-.916 4.889-2.058 11.13-3.424 18.724l-.002.009-.001.009c-1.214 7.431-2.046 12.121-2.5 14.116-3.02 7.828-7.001 14.265-11.927 19.341Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="M858 69.339h9.963c-3.026 16.507-5.307 29.833-6.842 39.976-1.57 10.377-2.37 17.49-2.37 21.265 0 7.483 2.563 13.478 7.747 17.852l.008.007.007.006c5.132 4.169 11.52 6.224 19.087 6.224 9.17 0 16.837-3.136 22.92-9.417 6.052-6.25 10.468-15.544 13.33-27.764l.226-.967-.942-.314-4.14-1.38-1.126-.375-.277 1.154a66.91 66.91 0 0 1-9.053 21.05c-4.201 6.451-8.665 9.395-13.348 9.395-2.455 0-4.093-.579-5.119-1.544-1.013-.953-1.612-2.459-1.612-4.727 0-3.962.942-11.869 2.861-23.805 1.885-11.727 4.701-27.272 8.448-46.636h28.826l.108-.969.46-4.14.134-1.209h-28.414a8187.107 8187.107 0 0 1 6.876-34.808l.33-1.653-1.643.38-2.957.682c-5.428.9-13.776 1.36-25.088 1.36h-.908l-.163.893-6.047 33.146h-11.796l-.108.969-.46 4.14-.134 1.209H858Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="m1022.17 146.557.71-.853-.87-.694-3.45-2.76-.85-.68-.68.85c-2.56 3.204-5.66 5.129-9.31 5.827l15.6-85.452.29-1.6-1.59.34-3.2.686c-5.27.9-13.54 1.36-24.86 1.36h-10.864l-.108.969-.46 4.14-.134 1.209h9.568l-7.353 39.884-.001.009-.002.009c-1.227 7.363-2.148 13.14-2.763 17.328-.609 4.146-.932 6.826-.932 7.921 0 5.947 2.023 10.849 6.102 14.601l.008.007.008.007c4.238 3.75 9.966 5.564 17.051 5.564 7.24 0 13.29-2.916 18.09-8.672ZM995.171 28.79c0 4.885 1.723 9.073 5.149 12.5 3.43 3.426 7.61 5.149 12.5 5.149 4.88 0 9.07-1.72 12.49-5.14 3.58-3.42 5.39-7.611 5.39-12.509 0-4.894-1.81-9.081-5.38-12.5-3.42-3.573-7.61-5.379-12.5-5.379-4.9 0-9.09 1.809-12.51 5.388-3.419 3.425-5.139 7.61-5.139 12.491Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="2.177"
            d="M1114.2 155.199c10.12 0 18.5-5.201 25.14-15.287.99 4.562 3.1 8.174 6.39 10.743 3.94 3.079 9.43 4.544 16.31 4.544 7.24 0 13.29-2.916 18.09-8.672l.71-.853-.87-.694-3.45-2.76-.85-.68-.68.85c-2.56 3.203-5.65 5.128-9.3 5.826 6.96-37.586 14.16-77.187 21.57-118.805l.01-.035v-.036c.31-2.763.47-4.808.47-6.1 0-6.667-1.99-11.971-6.1-15.751-4.1-3.769-9.84-5.578-17.07-5.578-7.24 0-13.29 2.916-18.09 8.672l-.71.853.87.694 3.45 2.76.85.68.68-.85c2.56-3.204 5.66-5.129 9.31-5.826l-11.59 63.09a52.93 52.93 0 0 0-2.07-2.937l-.03-.04-.03-.037c-4.55-5.031-10.93-7.489-18.98-7.489-13.97 0-25.39 5.356-34.19 16.037-8.79 10.679-13.13 25.212-13.13 43.472 0 10.472 2.82 18.888 8.57 25.119l.01.01c5.78 6.103 14.08 9.08 24.71 9.08Zm18.41-18.471-.02.019-.01.019c-1.92 3.258-4.28 5.905-7.07 7.958-2.75 2.026-5.59 3.007-8.55 3.007-2.68 0-4.62-1.098-5.95-3.352-.6-1.143-1.09-2.854-1.42-5.2-.34-2.348-.51-5.263-.51-8.759 0-13.377 2.13-27.225 6.39-41.55 2.14-7.17 4.33-12.462 6.55-15.94 2.25-3.522 4.34-4.901 6.21-4.901 6.85 0 11.42 2.002 14.06 5.748l.01.007v.008c2.77 3.784 4.3 7.988 4.61 12.634l-6.62 36.107c-1.5 3.87-4.05 8.598-7.68 14.195Z"
          />
          <motion.path
            variants={svg}
            stroke="#F2F2F2"
            stroke-width="3"
            d="m1202.44 145.58.01.009c6.4 6.084 15.69 9.04 27.66 9.04 17.71 0 31.39-5.449 40.84-16.478 9.56-10.973 14.3-25.352 14.3-43.031 0-10.506-3.22-18.867-9.77-24.94-6.39-6.226-15.36-9.269-26.74-9.269-11.14 0-20.58 1.702-28.28 5.156v.003c-7.53 3.448-13.22 8.256-17.03 14.444-3.74 5.916-6.47 12.15-8.18 18.7l-.01.01v.008c-1.56 6.397-2.33 14.156-2.33 23.258 0 9.174 3.18 16.896 9.53 23.09Zm46.23-16.182v.005c-5.5 12.224-11.6 17.758-18.1 17.758-3.14 0-5.42-1.324-6.99-4.054-1.62-2.821-2.5-7.192-2.5-13.257 0-18.763 2.82-33.838 8.4-45.29 5.81-11.771 11.9-17.101 18.11-17.101 1.59 0 2.93.361 4.06 1.048 1.13.69 2.11 1.742 2.92 3.216 1.63 2.98 2.51 7.59 2.51 13.967 0 16.901-2.82 31.46-8.41 43.708Z"
          />
        </svg>
      </div>
    </motion.strong>
  );
};

const Works = () => {
  const articleRef = useRef<HTMLDivElement>(null);
  const [isScrolling, setIsScrolling] = useState(false);

  const { scrollYProgress, scrollY } = useScroll({
    target: articleRef,
    offset: ['0', '1']
  });

  const animation = {
    items: {
      hidden: {
        opacity: 0
      },
      visible: {
        opacity: 1,
        transition: {
          when: 'beforeChildren',
          staggerChildren: 0.1
        }
      }
    },
    background: {
      hidden: {
        opacity: 0
      },
      visible: {
        opacity: 1,
        transition: {
          ease: 'easeInOut',
          duration: 0.5
        }
      }
    }
  };

  function fadeInUp(y = 40, x = 0, duration = 0.6) {
    return {
      hidden: {
        opacity: 0,
        y: y
      },
      visible: {
        opacity: 1,
        y: 0,
        transition: {
          ease: 'easeInOut',
          duration: duration
        }
      }
    };
  }

  function useParallax(value: MotionValue<number>, distance: any) {
    return useTransform(value, [0, 1], [distance, `-${distance}`]);
  }

  const y = [
    useParallax(scrollYProgress, 200),
    useParallax(scrollYProgress, 300),
    useParallax(scrollYProgress, 300),
    useParallax(scrollYProgress, 300),
    useParallax(scrollYProgress, 300),
    useParallax(scrollYProgress, 200)
  ];
  const itemY = useParallax(scrollYProgress, (Math.random() * (6 - 1) + 1) * 100);

  useMotionValueEvent(scrollY, 'change', (latest) => {
    const refRect = articleRef.current?.getBoundingClientRect();
    const retOffset = articleRef?.current?.offsetTop || 0;
    const refHeight = refRect?.height || 0;
    const viewportHeight = typeof window !== `undefined` ? window.innerHeight : 0;

    if (latest >= viewportHeight && latest <= retOffset + refHeight) {
      setIsScrolling(true);
    } else {
      setIsScrolling(false);
    }
  });

  const op = useTransform(scrollYProgress, [0.2, 0.9], [1, 0]);

  return (
    <motion.article
      ref={articleRef}
      className={c('works')}
      initial="hidden"
      whileInView="visible"
      // viewport={{ once: false, amount: 0.3 }}
    >
      <motion.div
        className={c('work_list')}
        variants={animation.items}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: false }}
      >
        <ArticleTitle className={c('title', 'mq_m')}>Work Experience</ArticleTitle>
        {myWorks.map((work, index) => (
          <WorkItem
            variants={fadeInUp()}
            className={c('work_item')}
            key={work.href}
            href={work.href as worksList}
            title={work.title}
            year={work.year}
            skills={work.skills}
            place={work.place}
            isOngoing={work.isOngoing}
          />
        ))}
      </motion.div>
      <motion.div
        className={c('background', { isShow: isScrolling })}
        // variants={animation.background}
        // style={{ opacity: op }}
        // initial={{ opacity: 0 }}
        // whileInView={{ opacity: 1 }}
      >
        <ArticleTitle className={c('title')}>Work Experience</ArticleTitle>
        <TextBig>I like What I do</TextBig>
      </motion.div>
      {/* <motion.h1>TEST</motion.h1> */}
      {/* <Alphabet type="i" className={c('i')} /> */}
    </motion.article>
  );
};

export default Works;
